diff --git a/.devcontainer/Dockerfile b/.devcontainer/Dockerfile
index 2a6df8c..7544cc9 100644
--- a/.devcontainer/Dockerfile
+++ b/.devcontainer/Dockerfile
@@ -5,22 +5,35 @@ RUN conda create -n main python=3.10 -y
 SHELL ["conda", "run", "-n", "main", "/bin/bash", "-c"]
 
 RUN apt update
-RUN apt install aptitude tree micro fish gh -y
+RUN apt install aptitude tree micro fish -y
 
 RUN conda init bash
 RUN conda install -c conda-forge mamba -y
 RUN mamba install -c conda-forge starship -y
-RUN mamba install -c conda-forge git-lfs wandb transformers -y
+RUN mamba install -c conda-forge wandb transformers rich python-dotenv -y
+RUN mamba install -c conda-forge bash htop jupyterlab -y
+RUN mamba install -c conda-forge micro bat -y
+RUN mamba install -c conda-forge google-cloud-storage -y
+RUN mamba install -c conda-forge google-api-python-client -y
+RUN mamba install -c conda-forge gh -y
+RUN mamba install -c conda-forge git -y
+RUN mamba install -c conda-forge git-lfs -y
+RUN mamba install -c conda-forge black -y
+RUN mamba install -c conda-forge tmux -y
+
+RUN echo yes | pip install pytest-pretty-terminal
+RUN echo yes | pip install glances
+RUN echo yes | pip install loguru
+RUN echo yes | pip install nvitop
+RUN git lfs install
+
 
 RUN mkdir -p /root/.config/fish/
 RUN touch /root/.config/fish/config.fish
 RUN echo "conda activate main" >> ~/.bashrc
 RUN echo "starship init fish | source" >> ~/.config/fish/config.fish
 RUN echo 'eval "$(starship init bash)"' >> ~/.bashrc
-
-
-RUN echo yes | pip install nvitop
-RUN git lfs install
+RUN git config --global --add safe.directory /workspaces/bwatchcompute
 
 ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
 
diff --git a/.devcontainer/devcontainer.json b/.devcontainer/devcontainer.json
index 3306215..735767c 100644
--- a/.devcontainer/devcontainer.json
+++ b/.devcontainer/devcontainer.json
@@ -28,10 +28,8 @@
         "gitlens.currentLine.enabled": false,
         "gitlens.hovers.currentLine.over": "line",
         "gitlens.statusBar.enabled": false,
-        "json.schemas": [],
         "jupyter.themeMatplotlibPlots": true,
         "material-icon-theme.activeIconPack": "none",
-        "material-icon-theme.files.associations": {},
         "material-icon-theme.folders.theme": "classic",
         "python.analysis.autoImportCompletions": true,
         "python.analysis.autoSearchPaths": true,
@@ -40,13 +38,10 @@
         "python.formatting.provider": "black",
         "python.languageServer": "Default",
         "redhat.telemetry.enabled": true,
-        "settingsSync.ignoredExtensions": [],
-        "settingsSync.ignoredSettings": [],
         "vsintellicode.features.python.deepLearning": "enabled",
         "vsintellicode.python.completionsEnabled": true,
         "vsintellicode.modify.editor.suggestSelection": "enabled",
         "window.zoomLevel": 1,
-        "workbench.colorCustomizations": {},
         "workbench.colorTheme": "One Dark",
         "workbench.iconTheme": "vscode-great-icons",
         "workbench.preferredDarkColorTheme": "One Dark Pro"
diff --git a/dependencies/install_dependencies.sh b/dependencies/install_dependencies.sh
deleted file mode 100755
index 4d5823d..0000000
--- a/dependencies/install_dependencies.sh
+++ /dev/null
@@ -1,32 +0,0 @@
-#!/bin/bash
-# Install CAPIT dependencies
-mamba install git -y
-mamba install opencv -y
-mamba install h5py -y
-mamba install pytorch-lightning -y
-mamba install transformers -y
-mamba install orjson -y
-mamba install tqdm -y
-mamba install regex -y
-mamba install seaborn -y
-mamba install scikit-learn -y
-mamba install rich -y
-mamba install python-dotenv -y
-mamba install wandb -y
-mamba install hydra-core -y
-mamba install ftfy -y
-mamba install imutils -y
-mamba install scipy -y
-mamba install einops -y
-mamba install torchmetrics -y
-mamba install ffmpeg -y
-mamba install timm -y
-mamba install higher -y
-mamba install tensorflow tensorflow-datasets -y
-mamba install -c fastai nvidia-ml-py3
-echo yes | pip install dotted_dict
-echo yes | pip install git+https://github.com/openai/CLIP.git@main
-echo yes | pip install git+https://github.com/AntreasAntoniou/TALI.git@main
-echo yes | pip install learn2learn
-
-echo yes | pip install -e .
diff --git a/dependencies/install_dev_tools.sh b/dependencies/install_dev_tools.sh
deleted file mode 100755
index df9e544..0000000
--- a/dependencies/install_dev_tools.sh
+++ /dev/null
@@ -1,16 +0,0 @@
-#!/bin/bash
-# Install development dependencies
-mamba install bash htop jupyterlab -y
-mamba install micro bat -y
-mamba install google-cloud-storage -y
-mamba install google-api-python-client -y
-mamba install gh -y
-mamba install git -y
-mamba install git-lfs -y
-mamba install black -y
-mamba install starship tmux -y
-
-echo yes | pip install nvitop
-echo yes | pip install pytest-pretty-terminal
-echo yes | pip install glances
-echo yes | pip install loguru
diff --git a/docker/controller/Dockerfile b/docker/controller/Dockerfile
index e205a9c..d700bb3 100644
--- a/docker/controller/Dockerfile
+++ b/docker/controller/Dockerfile
@@ -1,4 +1,4 @@
-FROM condaforge/mambaforge:latest
+FROM gcr.io/deeplearning-platform-release/base-cpu
 
 SHELL ["/bin/bash", "-c"]
 
diff --git a/docker/cpu/Dockerfile b/docker/cpu/Dockerfile
index 466dd1b..838848c 100644
--- a/docker/cpu/Dockerfile
+++ b/docker/cpu/Dockerfile
@@ -1,32 +1,26 @@
-FROM gcr.io/deeplearning-platform-release/pytorch-cpu.1-4:latest
+FROM gcr.io/deeplearning-platform-release/base-cpu
 
-SHELL ["/bin/bash", "-c"]
+RUN conda create -n main python=3.10 -y
 
-RUN apt-get update
-RUN conda init bash
-RUN conda create -n gate python=3.10 -y
-RUN echo "conda activate gate" >> ~/.bashrc
-
-RUN git clone https://github.com/AntreasAntoniou/GATE.git
+SHELL ["conda", "run", "-n", "main", "/bin/bash", "-c"]
 
-SHELL ["conda", "run", "-n", "gate", "/bin/bash", "-c"]
+RUN apt update
+RUN apt install aptitude -y
 
-RUN cd GATE \
-    && conda install -c conda-forge mamba -y \
-    && mamba install pytorch torchvision torchaudio -c pytorch -c conda-forge \
-    && bash install_dependencies.sh
+RUN conda init bash
+RUN conda install -c conda-forge mamba -y
+RUN mamba install -c conda-forge wandb transformers -y
+RUN mamba install -c conda-forge google-cloud-storage -y
+RUN mamba install -c conda-forge google-api-python-client -y
+RUN mamba install -c conda-forge gh -y
+RUN mamba install -c conda-forge git -y
+RUN mamba install -c conda-forge git-lfs -y
 
-RUN apt install fish -y \
-    && mamba install starship -y
+RUN git lfs install
 
-RUN apt install libgl1-mesa-glx -y
-RUN apt-get install 'ffmpeg'\
-    'libsm6'\
-    'libxext6'  -y \
+RUN echo "conda activate main" >> ~/.bashrc
+RUN echo 'eval "$(starship init bash)"' >> ~/.bashrc
 
-RUN cd GATE \
-    && git pull
 
-CWD /GATE
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
 
-CMD ["bin/bash"]
\ No newline at end of file
diff --git a/docker/gpu-dev/Dockerfile b/docker/gpu-dev/Dockerfile
index 4caf13e..35b723b 100644
--- a/docker/gpu-dev/Dockerfile
+++ b/docker/gpu-dev/Dockerfile
@@ -1,32 +1,40 @@
-FROM gcr.io/deeplearning-platform-release/pytorch-gpu:latest
+FROM gcr.io/deeplearning-platform-release/base-cu113
 
-SHELL ["/bin/bash", "-c"]
+RUN conda create -n main python=3.10 -y
 
-RUN apt-get update
-RUN conda init bash
-RUN conda create -n gate python=3.10 -y
-RUN echo "conda activate gate" >> ~/.bashrc
+SHELL ["conda", "run", "-n", "main", "/bin/bash", "-c"]
+
+RUN apt update
+RUN apt install aptitude tree micro fish -y
 
-RUN git clone https://github.com/AntreasAntoniou/GATE.git
+RUN conda init bash
+RUN conda install -c conda-forge mamba -y
+RUN mamba install -c conda-forge starship -y
+RUN mamba install -c conda-forge wandb transformers -y
+RUN mamba install -c conda-forge bash htop jupyterlab -y
+RUN mamba install -c conda-forge micro bat -y
+RUN mamba install -c conda-forge google-cloud-storage -y
+RUN mamba install -c conda-forge google-api-python-client -y
+RUN mamba install -c conda-forge gh -y
+RUN mamba install -c conda-forge git -y
+RUN mamba install -c conda-forge git-lfs -y
+RUN mamba install -c conda-forge black -y
+RUN mamba install -c conda-forge tmux -y
 
-SHELL ["conda", "run", "-n", "gate", "/bin/bash", "-c"]
+RUN echo yes | pip install pytest-pretty-terminal
+RUN echo yes | pip install glances
+RUN echo yes | pip install loguru
+RUN echo yes | pip install nvitop
+RUN git lfs install
 
-RUN cd GATE \
-    && conda install -c conda-forge mamba -y \
-    && mamba install pytorch torchvision torchaudio cudatoolkit=11.6 -c pytorch -c conda-forge \
-    && bash install_dependencies.sh
 
-RUN apt install fish -y \
-    && mamba install starship -y
+RUN mkdir -p /root/.config/fish/
+RUN touch /root/.config/fish/config.fish
+RUN echo "conda activate main" >> ~/.bashrc
+RUN echo "starship init fish | source" >> ~/.config/fish/config.fish
+RUN echo 'eval "$(starship init bash)"' >> ~/.bashrc
 
-RUN apt install libgl1-mesa-glx -y
-RUN apt-get install 'ffmpeg'\
-    'libsm6'\
-    'libxext6'  -y \
 
-RUN cd GATE \
-    && git pull
 
-CWD /GATE
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
 
-CMD ["bin/bash"]
\ No newline at end of file
diff --git a/docker/gpu/Dockerfile b/docker/gpu/Dockerfile
index ee547a3..0c80c1f 100644
--- a/docker/gpu/Dockerfile
+++ b/docker/gpu/Dockerfile
@@ -1,32 +1,26 @@
-FROM gcr.io/deeplearning-platform-release/pytorch-gpu:latest
+FROM gcr.io/deeplearning-platform-release/base-cu113
 
-SHELL ["/bin/bash", "-c"]
+RUN conda create -n main python=3.10 -y
 
-RUN apt-get update
-RUN conda init bash
-RUN conda create -n gate python=3.10 -y
-RUN echo "conda activate gate" >> ~/.bashrc
-
-RUN git clone https://github.com/AntreasAntoniou/GATE.git
+SHELL ["conda", "run", "-n", "main", "/bin/bash", "-c"]
 
-SHELL ["conda", "run", "-n", "gate", "/bin/bash", "-c"]
+RUN apt update
+RUN apt install aptitude -y
 
-RUN cd GATE \
-    && conda install -c conda-forge mamba -y \
-    && mamba install pytorch torchvision torchaudio cudatoolkit=11.6 -c pytorch -c conda-forge \
-    && bash install_dependencies.sh
+RUN conda init bash
+RUN conda install -c conda-forge mamba -y
+RUN mamba install -c conda-forge wandb transformers -y
+RUN mamba install -c conda-forge google-cloud-storage -y
+RUN mamba install -c conda-forge google-api-python-client -y
+RUN mamba install -c conda-forge gh -y
+RUN mamba install -c conda-forge git -y
+RUN mamba install -c conda-forge git-lfs -y
 
-RUN apt install fish -y \
-    && mamba install starship -y
+RUN git lfs install
 
-RUN apt install libgl1-mesa-glx -y
-RUN apt-get install 'ffmpeg' \
-    'libsm6' \
-    'libxext6'  -y
+RUN echo "conda activate main" >> ~/.bashrc
+RUN echo 'eval "$(starship init bash)"' >> ~/.bashrc
 
-RUN cd GATE \
-    && git pull
 
-CWD /GATE
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
 
-CMD ["bin/bash"]
\ No newline at end of file
diff --git a/docker/tpu/Dockerfile b/docker/tpu/Dockerfile
deleted file mode 100644
index daa7b45..0000000
--- a/docker/tpu/Dockerfile
+++ /dev/null
@@ -1,32 +0,0 @@
-FROM gcr.io/tpu-pytorch/xla:nightly_3.8_tpuvm
-
-SHELL ["/bin/bash", "-c"]
-
-RUN apt-get update
-RUN conda init bash
-RUN conda create -n gate python=3.10 -y
-RUN echo "conda activate gate" >> ~/.bashrc
-
-RUN git clone https://github.com/AntreasAntoniou/GATE.git
-
-SHELL ["conda", "run", "-n", "gate", "/bin/bash", "-c"]
-
-RUN cd GATE \
-    && conda install -c conda-forge mamba -y \
-    && mamba install pytorch torchvision torchaudio cudatoolkit=11.6 -c pytorch -c conda-forge \
-    && bash install_dependencies.sh
-
-RUN apt install fish -y \
-    && mamba install starship -y
-
-RUN apt install libgl1-mesa-glx -y
-RUN apt-get install 'ffmpeg'\
-    'libsm6'\
-    'libxext6'  -y \
-
-RUN cd GATE \
-    && git pull
-
-CWD /GATE
-
-CMD ["bin/bash"]
\ No newline at end of file
diff --git a/templates/simple.py b/templates/simple.py
index 32d18e8..b16e060 100644
--- a/templates/simple.py
+++ b/templates/simple.py
@@ -1,45 +1,45 @@
 import argparse
+import os
 from typing import Dict
+from rich import print
+from rich.traceback import install
+import dotenv
 
 import torch
 import torch.nn as nn
 import torch.nn.functional as F
 import wandb
 
+os.environ[
+    "HYDRA_FULL_ERROR"
+] = "1"  # Makes sure that stack traces produced by hydra instantiation functions produce
+# traceback errors related to the modules they built, rather than generic instantiate related errors that
+# are generally useless for debugging
+
+os.environ[
+    "TORCH_DISTRIBUTED_DEBUG"
+] = "DETAIL"  # extremely useful when debugging DDP setups
+
+install()  # beautiful and clean tracebacks for debugging
+dotenv.load_dotenv(override=True, verbose=True)
 # Create a parser to parse the arguments
-parser = argparse.ArgumentParser(description="Sample script")
+parser = argparse.ArgumentParser(description="Sample simple script")
 
 # Add the arguments
 parser.add_argument("--i", type=int, default=0, help="i")
 parser.add_argument("--j", type=int, default=0, help="j")
-parser.add_argument("--resume", type=bool, default=False, help="resume")
-
-
-args: Dict = parser.parse_args().__dict__
-
-model = torch.nn.Parameter(
-    torch.Tensor([args.i, args.j], dtype=torch), requires_grad=True
-)
-
-model.train()
-for batch_idx, (data, target) in enumerate(train_loader):
-    output = model(data)
-    loss = F.nll_loss(output, target)
-    loss.backward()
-    optimizer.step()
-    if batch_idx % args.log_interval == 0:
-        wandb.log({"loss": loss})
-    # log model gradients and parameters
-    wandb.log({"gradients": wandb.Histogram(model.fc1.weight.grad)})
-    wandb.log({"parameters": wandb.Histogram(model.fc1.weight)})
-    # log model predictions
-    wandb.log(
-        {
-            "predictions": [
-                wandb.Image(x, caption=str(y)) for x, y in zip(data, output.argmax(1))
-            ]
-        }
-    )
-
-    # Save the model
-    wandb.save("model.h5")
+
+
+args: Dict = parser.parse_args()
+
+wandb.init(project="simple", entity="machinelearningbrewery", config=args.__dict__)
+
+model = torch.nn.Parameter(torch.Tensor([args.i, args.j]), requires_grad=True)
+
+loss = torch.sum(model - float(args.i))
+loss.backward()
+
+wandb.log({"loss": loss})
+# log model gradients and parameters
+wandb.log({"gradients": wandb.Histogram(model.grad)})
+wandb.log({"parameters": wandb.Histogram(model.detach())})
